{"version":3,"file":"static/js/627.565ec688.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label-name\":\"ContactForm_label-name__XcZF4\",\"label-number\":\"ContactForm_label-number__cm3Ph\",\"input\":\"ContactForm_input__Bl93P\",\"label-text\":\"ContactForm_label-text__76xhG\",\"btn-add\":\"ContactForm_btn-add__Sdiv9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/action';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => state.contacts);\n\n    const createContact = contact => dispatch(addContact(contact));\n    \n\n    const handleInputChange = ({ target: { name, value } }) => {\n        if (name === 'name') setName(value);\n        else if (name === 'number') setNumber(value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (contacts.items.some(contact => contact.name === name)) message(name)\n        else createContact({ name, number });\n    \n        setName('');\n        setNumber('');\n    };\n    \n    const message = name => alert(`${name} is already in contacts`);\n    \n        return (\n            <form\n                className={css.form}\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n            >\n            <label className={css['label-name']}>\n                <span className={css['label-text']}>Name</span>\n                <input\n                    className={css.input}\n                    value={name}\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={handleInputChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <label className={css['label-number']}>\n                <span className={css['label-text']}>Number</span>\n                <input\n                    className={css.input}\n                    value={number}\n                    type=\"tel\"\n                    name=\"number\"\n                    onChange={handleInputChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </label>\n            <button className={css['btn-add']}>Add contact</button>\n        </form>\n        );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contact-wrapper\":\"Contact_contact-wrapper__A1n0D\",\"delete-btn\":\"Contact_delete-btn__dlH4h\"};","import PropTypes from 'prop-types';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ contact: { id, name, phone }, deleteContact }) => {\n    return (\n        <ul>\n            <li className={css['contact-wrapper']}>\n                {name}: <span>{phone}</span>\n                <button className={css['delete-btn']} onClick={() => deleteContact(id)}>Delete</button>\n            </li> \n        </ul>        \n    )\n};\n\nContact.propTypes = {\n    contact: PropTypes.shape ({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n    }),\n    deleteContact: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContact } from '../../redux/contacts/action';\nimport { Contact } from 'components/Contact/Contact';\nimport { useNavigate } from 'react-router-dom';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n    const contacts = useSelector(state => state.contacts);\n    const filter = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.contacts.isLoading);\n    const error = useSelector(state => state.contacts.error);\n    const navigate = useNavigate;\n\n    useEffect(() => {\n        dispatch(fetchContact())\n            .unwrap()\n            .catch(() => navigate('/login'));\n    }, [dispatch, navigate]);\n    const filteredContacts = () => \n        contacts.items.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n    const removeContact = id => dispatch(deleteContact(id));\n\n    return (\n        <ul className={css.contactList}>\n            {(error && <b>{error}</b>) ||\n            (isLoading && <b>Please wait, loading is in progress...</b>) ||\n            filteredContacts().map(contact => (\n                <li key={contact.id} className={css.contactListItem}>\n                    <Contact \n                    contact={contact} \n                    deleteContact={removeContact} />\n                </li>\n            ))}\n        </ul>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_filterWrapper__ohvAm\",\"filter-text\":\"Filter_filter-text__jtUz9\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter);\n    const handleChange = ({ target: { value } }) => dispatch(changeFilter(value));\n\n\n    return(\n        <div className={css.filterWrapper}>\n            <p htmlFor=\"filter\">Search</p>\n            <input className={css.input}\n                type=\"text\"\n                name=\"filter\"\n                autoComplete=\"off\"\n                value={filter}\n                onChange={handleChange}\n            ></input>\n        </div>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapperContactsPage\":\"ContactsPage_wrapperContactsPage__JFi0n\",\"btnIconPlus\":\"ContactsPage_btnIconPlus__DHPSA\"};","import { useState } from 'react';\nimport { GoPlus, GoX } from \"react-icons/go\";\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n    const [toggle, setToggle] = useState(false);\n    const toggleHandler = () => setToggle(!toggle);\n    return (\n        <div className={css.wrapperContactsPage}>\n            <h1>Phonebook</h1>\n            {toggle && <ContactForm />}\n            <p>Contacts</p>\n            <Filter />\n            <ContactList />\n            {toggle ? <button className={css.btnIconPlus} type=\"button\" onClick={toggleHandler}><GoX></GoX></button> : <button type=\"button\" onClick={toggleHandler}><GoPlus></GoPlus></button>}\n        </div>\n    );\n}\n\nexport default ContactsPage;"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","handleInputChange","_ref","_ref$target","target","value","message","alert","concat","_jsxs","className","css","autoComplete","onSubmit","e","contact","preventDefault","items","some","addContact","children","_jsx","type","onChange","pattern","title","required","Contact","_ref$contact","id","phone","deleteContact","onClick","ContactList","filter","isLoading","error","navigate","useNavigate","useEffect","fetchContact","unwrap","catch","removeContact","toLowerCase","includes","map","Filter","htmlFor","changeFilter","toggle","setToggle","toggleHandler","GoX","GoPlus"],"sourceRoot":""}